Make test mode that eats gigabytes of space in a filesys by subtracting
an offset from blk_pos for blocks past root.  Can be used to test boundary
conditions near filesys capactity.

Move btinit.cc to fix and make filesys extend btasXFS.

Add call to allocate transaction id.  A TID will have a bit set
to distinguish it from PIDs.  btserve will keep a table of tid by
pid.  When the PID for a TID is discovered to be dead, locks for the
TID can be released.  The TID can then be used in msgs to distinguish
transaction contexts.  Should BTRELEASE free TID also (when root == 0)?

Have BTRELEASE release only locks for file unless root node is 0.

Recovery utilities must be run as root to avoid permission errors on
btas files.  Should treat effective user id of btas as an alternate
super user for btas permissions so that recovery utilities don't have
to run as unix root user.

Giving a non-existant file for root file system causes a core dump.

Currently, PID is used as a session/transaction identifier.  This will
not work for multithreaded programs (e.g. Java) or for a UDP socket protocol.
The msgq protocol must continue to use PID to get messages back to the
sender, and a socket protocol must use IPaddr,port.  (If an arbitrary
id is assigned, how would the negotiation result get back to the client
for msgq?)  The only solution is to add a "transaction id" to each request
packet.  This causes either code compatibility problems, or extra copying.
One solution is to implement this for UDP, and require multithreaded apps
to use UDP.  

Will a unix domain socket be faster or slower than msgq?  Only one way
to find out . . .
